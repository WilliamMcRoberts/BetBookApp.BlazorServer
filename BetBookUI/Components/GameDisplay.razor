@inject NavigationManager navManager
@inject IGameData gameData

@if(AvailableGameList is not null && AvailableGameList.Count != 0)
{
    foreach(GameModel game in AvailableGameList)
    {
        <div class="game-item-list" >
            <div class="game-title">
                <div class="helmet-icon-away">
                    <img style="height:80px;" src="/images/@game.AwayTeam.ImagePath" alt="team logo">
                </div>
                <div class="game-description">
                    <h6 style="font-size:18px; font-weight:700">@game.AwayTeam.TeamName At @game.HomeTeam.TeamName @game.PointSpreadDescription</h6>
                    <h6 style="font-weight:700;">@game.DateOfGameOnly at @game.TimeOfGameOnly pm</h6>
                </div>
                <div class="helmet-icon-home">
                    <img style="height:80px;" src="/images/@game.HomeTeam.ImagePath" alt="team logo">
                </div>
            </div>
            <div class="bet-selection-single">
                    <button @onclick="(() => CreateBet(game.Id))" 
                        class="mb-2 site-btn btn site-btn-light btn-sm text-uppercase">
                        Bet On This Game
                    </button>
                </div>
        </div>
    }
}
else
{
    <h1 style="margin-top:2em;" class="title">There are no games currently available.</h1>
    <h1 style="margin-top:1em;" class="title">We'll have to wait until next week.</h1>
}




@code {

    [Parameter]
    public UserModel User { get; set; } = new();

    [Parameter]
    public List<GameModel> AvailableGameList { get; set; } = new();

    [Parameter]
    public IEnumerable<TeamModel>? Teams { get; set; }

    /// <summary>
    /// Selects a game to place a wager on and navigates to
    /// the create bet page
    /// </summary>
    /// <param name="gameId">
    /// int represents the id of game being selected
    /// </param>
    private void CreateBet(int gameId)
    {
        if(User is not null)
            navManager.NavigateTo($"/CreateBet/{gameId}");
        else
            navManager.NavigateTo("/MicrosoftIdentity/Account/SignIn", true);
    }
}