@page "/"
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider
@inject MediatR.IMediator _mediator
@inject ILogger<Index> logger

<PageTitle>HOME</PageTitle>

<div>
    <h6 class="text-uppercase" style="font-size:25px;text-align:center; font-weight:700;">Available Games</h6>
</div>
    

<div class="games">

    <GameDisplay AvailableGameList="gamesAvailable" 
                    User="loggedInUser"/>

</div>

@code {
    UserModel? loggedInUser;
    Season season;
    int week;
    List<GameModel> gamesAvailable = new();
    List<GameModel> thisWeeksGames = new();

    protected async override Task OnInitializedAsync()
    {
        logger.LogInformation("Index Page Requested");

        gamesAvailable = 
            (List<GameModel>)await _mediator.Send(new GetGamesNotStartedQuery());

        if(gamesAvailable.Count() < 1)
        {
            season = DateTime.Now.CalculateSeason();
            week = season.CalculateWeek(DateTime.Now);
            await _mediator.UpdateAll(week, season);
        }

        loggedInUser = await _mediator.GetUserFromAuth(authProvider);
        await _mediator.LoadAndVerifyUser(authProvider, loggedInUser);
    }
}
