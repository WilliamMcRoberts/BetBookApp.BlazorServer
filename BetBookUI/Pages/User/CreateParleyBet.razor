@page "/CreateParleyBet"
@attribute [Authorize]
@inject AuthenticationStateProvider authProvider
@inject ILogger<CreateParleyBet> _logger
@inject MediatR.IMediator _mediator


<PageTitle>CREATE A PARLEY BET</PageTitle>

@if(wagerPlaced == false)
{
    <div class="info-label-container">
        @if (chosenGamesAndWinners.Count < 5)
        {
           <h6 style="text-align:center; font-weight:700;">CHOOSE UP TO 5 GAMES</h6>
        }
        else
        {
            <h6 style="color:red;text-align:center;margin-top:1.5em;font-size:20px;font-weight:700;margin:0 auto;">* GAME LIMIT *</h6>
        }
    </div>
    <div class="parley-bet-game-list-section">
        <div style="width:100%;">
            @foreach (GameModel game in gamesAvailable.OrderBy(g => g.DateOfGame).ThenBy(g => g.TimeOfGameOnly))
            {
                @if(gamesAvailable.Count > 1)
                {
                    @if (!chosenGamesAndWinners.ContainsKey(game))
                    {
                        <div class="parley-game-item-unchosen">
                            <div class="parley-game-title">
                                <div class="parley-helmet-icon-away">
                                    <img style="height:80px;" src="/images/@game.AwayTeam?.ImagePath" alt="team logo">
                                </div>
                                <div class="game-description">
                                    <h6 style="font-size:18px;font-weight:700">@game.AwayTeam?.TeamName At @game.HomeTeam?.TeamName @game.PointSpreadDescription</h6>
                                    <h6 style="font-weight:700;">@game.DateOfGameOnly at @game.TimeOfGameOnly pm</h6>
                                </div>
                                <div class="at">
                                    <h6 class="at-symbol">@@</h6>
                                </div>
                                <div class="parley-helmet-icon-home">
                                    <img style="height:80px;" src="/images/@game.HomeTeam?.ImagePath" alt="team logo">
                                </div>
                            </div>
                            @if (chosenGamesAndWinners.ContainsValue(game.HomeTeam!))
                            {
                                <div class="parley-buttons">
                                    <label style="margin-right: .5em;font-size:18px;">You've chosen @game.HomeTeam?.TeamName @game.PointSpreadDescription?.Substring(0, 5) over @game.AwayTeam?.TeamName</label>
                                    <button class="mb-2 mt-2 undo-btn btn undo-btn-light btn-sm text-uppercase"
                                        @onclick="() => UndoWinnerSelection(game)">
                                        Undo @game.HomeTeam?.TeamName @GetSpreadForDisplay(game, game.HomeTeam!)
                                    </button>
                                </div>
                            }
                            else if (chosenGamesAndWinners.ContainsValue(game.AwayTeam!))
                            {
                                <div class="parley-buttons">
                                    <button class="mb-2 mt-2 undo-btn btn undo-btn-light btn-sm text-uppercase"
                                        @onclick="() => UndoWinnerSelection(game)">
                                        Undo @game.AwayTeam?.TeamName @GetSpreadForDisplay(game, game.AwayTeam!)
                                    </button>
                                    <label style="margin-left: .5em;font-size:18px;">You've chosen @game.AwayTeam?.TeamName @GetSpreadForDisplay(game, game.AwayTeam!) over @game.HomeTeam?.TeamName</label>
                                </div>
                            }
                            else
                            {
                                <div class="parley-buttons">
                                    <button class="mb-2 mt-2 site-btn btn site-btn-light btn-sm text-uppercase"
                                        @onclick="(() => ChooseWinnerForGame(game, game.AwayTeam!))">
                                        Choose @game.AwayTeam?.TeamName @GetSpreadForDisplay(game, game.AwayTeam!)
                                    </button>
                                    <button class="mb-2 mt-2 site-btn btn site-btn-light btn-sm text-uppercase"
                                        @onclick="(() => ChooseWinnerForGame(game, game.HomeTeam!))">
                                        Choose @game.HomeTeam?.TeamName @GetSpreadForDisplay(game, game.HomeTeam!)
                                    </button>
                                </div>

                            }
                        </div>
                    }
                    else
                    {
                        <div class="parley-game-item-chosen">
                            <div class="parley-game-title">
                                <div class="parley-helmet-icon-away">
                                    <img style="height:80px;" src="/images/@game.AwayTeam?.ImagePath" alt="team logo">
                                </div>
                                <div class="game-description">
                                    <h6 style="font-size:18px; font-weight:700">@game.AwayTeam?.TeamName At @game.HomeTeam?.TeamName @game.PointSpreadDescription</h6>
                                    <h6 style="font-weight:700;">@game.DateOfGameOnly at @game.TimeOfGameOnly pm</h6>
                                </div>
                                <div class="at">
                                    <h6 class="at-symbol">@@</h6>
                                </div>
                                <div class="parley-helmet-icon-home">
                                    <img style="height:80px;" src="/images/@game.HomeTeam?.ImagePath" alt="team logo">
                                </div>
                            </div>
                            @if (chosenGamesAndWinners.ContainsValue(game.HomeTeam!))
                            {
                                <div class="parley-buttons">
                                    <label style="margin-right: .5em;font-size:18px;">You've chosen @game.HomeTeam?.TeamName @game.PointSpreadDescription?.Substring(0, 5) over @game.AwayTeam?.TeamName</label>
                                    <button class="mb-2 mt-2 undo-btn btn undo-btn-light btn-sm text-uppercase"
                                        @onclick="() => UndoWinnerSelection(game)">
                                        Undo @game.HomeTeam?.TeamName @GetSpreadForDisplay(game, game.HomeTeam!)
                                    </button>
                                </div>
                                
                            }
                            else if (chosenGamesAndWinners.ContainsValue(game.AwayTeam!))
                            {
                                <div class="parley-buttons">
                                    <button class="mb-2 mt-2 undo-btn btn undo-btn-light btn-sm text-uppercase"
                                        @onclick="() => UndoWinnerSelection(game)">
                                        Undo @game.AwayTeam?.TeamName @GetSpreadForDisplay(game, game.AwayTeam!)
                                    </button>
                                    <label style="margin-left: .5em;font-size:18px;">You've chosen @game.AwayTeam?.TeamName @GetSpreadForDisplay(game, game.AwayTeam!) over @game.HomeTeam?.TeamName</label>
                                </div>
                                
                            }
                            else
                            {
                                <div class="parley-buttons">
                                    <button class="mb-2 mt-2 site-btn btn site-btn-light btn-sm text-uppercase"
                                        @onclick="(() => ChooseWinnerForGame(game, game.AwayTeam!))">
                                        Choose @game.AwayTeam?.TeamName @GetSpreadForDisplay(game, game.AwayTeam!)
                                    </button>
                                    <button class="mb-2 mt-2 site-btn btn site-btn-light btn-sm text-uppercase"
                                        @onclick="(() => ChooseWinnerForGame(game, game.HomeTeam!))">
                                        Choose @game.HomeTeam?.TeamName @GetSpreadForDisplay(game, game.HomeTeam!)
                                    </button>
                                </div>
                                
                            }
                        </div>
                    }
                }
                else 
                {
                    <div class="parley-game-item-unchosen">
                        <h3 style="text-align:center;margin:4em 2em;">There are not enough games left in this week to create a parley...we'll have to wait until next week.</h3>
                    </div>
                }

            }
            <div class="parley-game-item-unchosen">
                @if(betAmountBad)
                {
                    <div style="color:red;text-align:center;margin-top:1em;font-size:15px;font-weight:700;margin:0 .5em;">YOU CANNOT SUBMIT A WAGER WITH A BET AMOUNT OF ZERO</div>
                }
                @if(betCountBad)
                {
                    <div style="color:red;text-align:center;margin-top:1em;font-size:15px;font-weight:700;margin:0 .5em;">YOU MUST PICK AT LEAST 2 GAMES AND NO MORE THAN 5 FOR A PARLEY</div>
                }
                @if(gameNotStarted == false)
                {
                    <div style="color:red;text-align:center;margin-top:1em;font-size:15px;font-weight:700;margin:0 .5em;">@startedGameDescription HAS ALREADY STARTED...TRY A DIFFERENT GAME</div>
                }
                <div class="wager-box">
                    <label style="text-align: center;margin: .5em auto;">Wager Amount</label>
                    <input type="number" @bind-value="@betAmount" @bind-value:event="oninput"/>
                </div>  
                <div style="text-align:center;margin-top:1em;">
                    <div class="payout-container">
                        <p class="payout-title">Potential Payout</p>
                        <p class="payout">$@chosenGamesAndWinners.Count.CalculateParleyBetPayout(betAmount).ToString("#,##0.00")</p>
                    </div>
                    <p style="margin: .5em 2em;">If everything looks good click "Submit Wager"</p>
                </div>
                <div style="text-align:center; margin-top:2em;margin-bottom: 2em;" class="undo-btn-container">
                    <button class="mb-2 mt-4 site-btn btn site-btn-light btn-sm text-uppercase" 
                        @onclick="SubmitParleyWager">
                        Submit Wager
                    </button>  
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="parley-game-item-unchosen">
        <h3 style="text-align:center;margin-top:4em;margin-bottom:4em;">Good luck!</h3>
    </div>
}
<SfToast @ref="ToastObj" Timeout="0" ShowCloseButton="true" Title="Great Choices! You Must Know Your Stuff!" Content="@Content">
    <ToastPosition X="Right" Y="Bottom"></ToastPosition>
    <ToastAnimationSettings>
        <ToastShowAnimationSettings Effect="@ShowAnimation"></ToastShowAnimationSettings>
        <ToastHideAnimationSettings Effect="@HideAnimation"></ToastHideAnimationSettings>
    </ToastAnimationSettings>
</SfToast>

<style>
    
    /*Toast Background*/
    .e-toast-container .e-toast { 
        /*Black w/opacity*/
        background-color: rgba(0,0,0, .9);
        border: 1px solid white;
        border-radius: 10px;
        backdrop-filter:blur(10px);
    }

        /*Toast Background Hover*/
        .e-toast-container .e-toast:hover { 
            /*Black w/opacity*/
             background-color: rgba(0,0,0, .9); 
        }

        /*Toast Title*/
        .e-toast-container .e-toast .e-toast-message .e-toast-title { 
            color: white;
            font-weight: 700;
        }

        /*Toast Content*/
        .e-toast-container .e-toast .e-toast-message .e-toast-content { 
            color: white;
            font-weight: 700;
        }

</style>

@code {
    SfToast? ToastObj;
    private ToastEffect ShowAnimation = ToastEffect.FadeIn;
    private ToastEffect HideAnimation = ToastEffect.FadeOut;
    private string Content => "Thank you for choosing Bet Book Gaming.";
    private List<GameModel> gamesAvailable = new();
    private List<GameModel> thisWeeksGames = new();
    private List<GameModel> gamesChosen = new();
    private Dictionary<GameModel, TeamModel> chosenGamesAndWinners = new();
    private decimal betAmount;
    private bool wagerPlaced = false;
    private bool betAmountBad = false;
    private bool betCountBad = false;
    private bool gameNotStarted = true;
    private string startedGameDescription = string.Empty;
    private Season season;
    private int week;

    protected async override Task OnInitializedAsync()
    {
        _logger.LogInformation("Create Parley Bet Page Requested");

        gamesAvailable =
            (List<GameModel>)await _mediator.Send(new GetGamesNotStartedQuery());
    }

    private async Task SubmitParleyWager()
    {
        if (chosenGamesAndWinners.Count < 2)
        {
            betCountBad = true;
            return;
        }

        if (betAmount <= 0)
        {
            betAmountBad = true;
            return;
        }

        UserModel? loggedInUser = 
            await _mediator.GetUserFromAuth(authProvider);

        if (loggedInUser is null)
            return;

        ParleyBetModel parleyBet = new();

        foreach (KeyValuePair<GameModel, TeamModel> kv in chosenGamesAndWinners)
        {
            GameByScoreIdDto? gameLookup =
                await _mediator.Send(new GetGameByScoreIdDtoQuery(kv.Key.ScoreId));

            if (gameLookup is null)
                return;

            if (gameLookup.Score.HasStarted)
            {
                startedGameDescription = $"{kv.Key.AwayTeam?.TeamName} at {kv.Key.HomeTeam?.TeamName}";
                kv.Key.GameStatus = GameStatus.IN_PROGRESS;
                await _mediator.Send(new UpdateGameCommand(kv.Key));
                gameNotStarted = false;
                return;
            }

            BetModel bet = new()
            {
                BetAmount = 0,
                BetPayout = 0,
                BettorId = loggedInUser!.Id,
                GameId = kv.Key.Id,
                ChosenWinnerId = kv.Value.Id,
                PayoutStatus = PayoutStatus.PARLEY,
                PointSpread = kv.Key.PointSpread
            };

            bet = await _mediator.Send(new InsertBetCommand(bet));
            parleyBet.Bets.Add(bet);
        }

        parleyBet.BetAmount = betAmount;
        parleyBet.BetPayout =
            parleyBet.Bets.Count.CalculateParleyBetPayout(betAmount);
        parleyBet.BettorId = loggedInUser!.Id;
        parleyBet.ParleyBetStatus = ParleyBetStatus.IN_PROGRESS;
        parleyBet.ParleyPayoutStatus = ParleyPayoutStatus.UNPAID;

        parleyBet = await _mediator.Send(new InsertParleyBetCommand(parleyBet));

        if (parleyBet.Id != 0) 
            await this.ToastObj!.ShowAsync();

        wagerPlaced = true;
        betAmount = 0;
    }

    private void UndoWinnerSelection(GameModel game)
    {
        if (chosenGamesAndWinners.ContainsKey(game)) 
            chosenGamesAndWinners.Remove(game);
    }

    private void ChooseWinnerForGame(GameModel game, TeamModel chosenTeam)
    {
        if (chosenGamesAndWinners.Count < 5 && !chosenGamesAndWinners.ContainsKey(game))
            chosenGamesAndWinners.Add(game, chosenTeam);
        if (chosenGamesAndWinners.Count >= 2 && betCountBad)
            betCountBad = false;
    }

    private string GetSpreadForDisplay(GameModel currentGame, TeamModel team)
    {
        if(team == currentGame.AwayTeam)
        {
            return (currentGame.PointSpread < 0) ? $"+ {currentGame.PointSpread * -1}"
                : (currentGame.PointSpread == 0) ? $"+ 0"
                : $"- {currentGame.PointSpread}";
        }

        return (currentGame.PointSpread < 0) ? $"- {currentGame.PointSpread?.ToString().Trim('-')}" 
            : (currentGame.PointSpread == 0) ? $"+ 0" 
            : $"+ {currentGame.PointSpread}";
    }
}
