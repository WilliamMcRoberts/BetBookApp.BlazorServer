@page "/CreateBet/{gameId:int}"
@using BetBookData.Helpers
@attribute [Authorize]
@inject AuthenticationStateProvider authProvider
@inject IGameData gameData
@inject ITeamData teamData
@inject IUserData userData

<PageTitle>CreateBet</PageTitle>

<div style="margin-left: 4em;" class="balance">
    <label>@loggedInUser?.DisplayName's Balance: $@loggedInUser?.AccountBalance</label>
</div>
<div class="game-wager-container">

    <GameDetails CurrentGame="currentGame"/>

    <CreateWager CurrentGame="currentGame"/>
</div>

@code {

    // Game id from selected game
    [Parameter]
    public int gameId { get; set; }

    // Current game being viewed
    private GameModel? currentGame;

    // Current logged in user
    private UserModel? loggedInUser;

    private IEnumerable<GameModel> games;

    private IEnumerable<TeamModel> teams;

    /// <summary>
    /// Async initialization method
    /// </summary>
    /// <returns></returns>
    protected async override Task OnInitializedAsync()
    {
        games = await gameData.GetGames();

        teams = await teamData.GetTeams();

        currentGame = games.Where(g => g.Id == gameId)
                           .ToList()
                           .PopulateGameModelsWithTeams(teams)
                           .FirstOrDefault();

        loggedInUser = await authProvider.GetUserFromAuth(userData);

        loggedInUser.AccountBalance = 
            Convert.ToDecimal((loggedInUser.AccountBalance).ToString("#.00"));
    }
}
